{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addProduct","product","setState","prevState","removeProduct","splice","indexOf","clearTheGoods","this","join","className","length","map","includes","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2FaC,E,4MAnFbC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIhDG,cAAgB,SAACH,GACf,EAAKH,MAAMC,cAAcM,OAAO,EAAKP,MAAMC,cAAcO,QAAQL,GAAU,GAE3E,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BJ,cAAc,YAAKI,EAAUJ,oB,EAIjCQ,cAAgB,WACd,EAAKL,SAAS,CAAEH,cAAe,M,4CAGjC,WAAU,IAAD,OACCA,EAAkBS,KAAKV,MAAvBC,cAIR,OAFAA,EAAcU,KAAK,MAGjB,sBAAKC,UAAU,MAAf,UACE,+BAC4B,IAAzBX,EAAcY,QAAgB,oBACL,IAAzBZ,EAAcY,QAAd,UAAiCZ,EAAjC,gBACAA,EAAcY,QAAU,GAAxB,UAAgCZ,EAAcU,KAAK,MAAnD,oBAEH,oBAAIC,UAAU,YAAd,SACGd,EAAgBgB,KAAI,SAAAX,GACnB,OAAI,EAAKH,MAAMC,cAAcc,SAASZ,GAElC,qBACES,UAAU,qCADZ,UAGGT,EACD,wBACEa,KAAK,SACLJ,UAAU,yBACVK,QAAS,WACP,EAAKX,cAAcH,IAJvB,uBAcJ,qBAAIS,UAAU,4BAAd,UACGT,EACD,wBACEa,KAAK,SACLJ,UAAU,0BACVK,QAAS,WACP,EAAKf,WAAWC,IAJpB,4BAaR,wBACES,UAAU,uCACVI,KAAK,SACLC,QAAS,kBAAM,EAAKR,iBAHtB,0B,GAxEUS,IAAMC,WCjBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7eeb2977.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addProduct = (product: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, product],\n    }));\n  };\n\n  removeProduct = (product: string) => {\n    this.state.selectedGoods.splice(this.state.selectedGoods.indexOf(product), 1);\n\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods],\n    }));\n  };\n\n  clearTheGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    selectedGoods.join(' ,');\n\n    return (\n      <div className=\"app\">\n        <h1>\n          {selectedGoods.length === 0 && 'No goods selected'}\n          {selectedGoods.length === 1 && `${selectedGoods} is selected`}\n          {selectedGoods.length >= 2 && `${selectedGoods.join(', ')} are selected`}\n        </h1>\n        <ul className=\"app__list\">\n          {goodsFromServer.map(product => {\n            if (this.state.selectedGoods.includes(product)) {\n              return (\n                <li\n                  className=\"list-group-item selected app__item\"\n                >\n                  {product}\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-danger\"\n                    onClick={() => {\n                      this.removeProduct(product);\n                    }}\n                  >\n                    Remove\n                  </button>\n                </li>\n              );\n            }\n\n            return (\n              <li className=\"list-group-item app__item\">\n                {product}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-success\"\n                  onClick={() => {\n                    this.addProduct(product);\n                  }}\n                >\n                  Select\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        <button\n          className=\"btn btn-outline-danger button__clear\"\n          type=\"button\"\n          onClick={() => this.clearTheGoods()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}